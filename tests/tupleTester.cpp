/*******************************************************************************
 *    INCLUDED FILES
 ******************************************************************************/
#include <CppUTest/TestHarness.h>

//-- module being tested
#include "../include/tuple.h"


/*******************************************************************************
 *    DEFINITIONS
 ******************************************************************************/

/*******************************************************************************
 *    PRIVATE TYPES
 ******************************************************************************/

/*******************************************************************************
 *    PRIVATE DATA
 ******************************************************************************/

/*******************************************************************************
 *    PRIVATE FUNCTIONS
 ******************************************************************************/

/*******************************************************************************
 *    SETUP, TEARDOWN
 ******************************************************************************/

/*******************************************************************************
 *    TESTS
 ******************************************************************************/

TEST_GROUP(TupleTest) {};

TEST(TupleTest, isAPoint)
{
    Tuple tp(4.3,-4.2, 3.1, 1.0);

    DOUBLES_EQUAL(4.3, tp.x, EPSILON);
    DOUBLES_EQUAL(-4.2, tp.y, EPSILON);
    DOUBLES_EQUAL(3.1, tp.z, EPSILON);
    CHECK(tp.IsPoint());

    Tuple t_point = Point(1.3, 2.5, -2.6);
    DOUBLES_EQUAL(1.3, t_point.x, EPSILON);
    DOUBLES_EQUAL(2.5, t_point.y, EPSILON);
    DOUBLES_EQUAL(-2.6, t_point.z, EPSILON);
    CHECK(t_point.IsPoint());
}

TEST(TupleTest, isAVector)
{
    Tuple tp(4.3, -4.2, 3.1, 0.0);
    CHECK(tp.IsVector());

    Tuple t_vector = Vector(1.3, 32.5, -2.6);
    DOUBLES_EQUAL(1.3, t_vector.x, EPSILON);
    DOUBLES_EQUAL(32.5, t_vector.y, EPSILON);
    DOUBLES_EQUAL(-2.6, t_vector.z, EPSILON);
    CHECK(t_vector.IsVector());
}
